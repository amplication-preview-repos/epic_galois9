/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ProcessedPost as PrismaProcessedPost } from "@prisma/client";

export class ProcessedPostServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProcessedPostCountArgs, "select">
  ): Promise<number> {
    return this.prisma.processedPost.count(args);
  }

  async processedPosts<T extends Prisma.ProcessedPostFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProcessedPostFindManyArgs>
  ): Promise<PrismaProcessedPost[]> {
    return this.prisma.processedPost.findMany<Prisma.ProcessedPostFindManyArgs>(
      args
    );
  }
  async processedPost<T extends Prisma.ProcessedPostFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProcessedPostFindUniqueArgs>
  ): Promise<PrismaProcessedPost | null> {
    return this.prisma.processedPost.findUnique(args);
  }
  async createProcessedPost<T extends Prisma.ProcessedPostCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProcessedPostCreateArgs>
  ): Promise<PrismaProcessedPost> {
    return this.prisma.processedPost.create<T>(args);
  }
  async updateProcessedPost<T extends Prisma.ProcessedPostUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProcessedPostUpdateArgs>
  ): Promise<PrismaProcessedPost> {
    return this.prisma.processedPost.update<T>(args);
  }
  async deleteProcessedPost<T extends Prisma.ProcessedPostDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProcessedPostDeleteArgs>
  ): Promise<PrismaProcessedPost> {
    return this.prisma.processedPost.delete(args);
  }
}
